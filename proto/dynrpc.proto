/*
 * Copyright (c) 2023 - Restate Software, Inc., Restate GmbH
 *
 * This file is part of the Restate SDK for Node.js/TypeScript,
 * which is released under the MIT license.
 *
 * You can find a copy of the license in file LICENSE in the root
 * directory of this repository or package, or at
 * https://github.com/restatedev/sdk-typescript/blob/main/LICENSE
 */

syntax = "proto3";

import "dev/restate/ext.proto";
import "dev/restate/events.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";

service RpcEndpoint {
	option (dev.restate.ext.service_type) = KEYED;

	rpc call(RpcRequest) returns (RpcResponse) {};

	rpc handle(KeyedEvent) returns (google.protobuf.Empty) {};
}

message KeyedEvent {
	string key = 1 [(dev.restate.ext.field) = KEY];
	bytes payload = 3 [(dev.restate.ext.field) = EVENT_PAYLOAD];
	map<string, string> attributes = 15 [(dev.restate.ext.field) = EVENT_METADATA];
}

service UnkeyedRpcEndpoint {
	option (dev.restate.ext.service_type) = UNKEYED;

	rpc call(RpcRequest) returns (RpcResponse) {};
}

message RpcRequest {
  string key = 1 [(dev.restate.ext.field) = KEY];
  google.protobuf.Value request = 2;

  // internal: see src/utils/assumptions.ts
  int32 sender_assumes = 101;
}

message RpcResponse {
  	google.protobuf.Value response = 1;
}
