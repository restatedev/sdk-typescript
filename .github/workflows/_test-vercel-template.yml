name: Test Vercel Template

on:
  workflow_call:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      restate:
        image: docker.restate.dev/restatedev/restate:latest
        ports:
          - 8080:8080
          - 9070:9070
        env:
          DO_NOT_TRACK: true
        options: >-
          --health-cmd "curl -f http://localhost:9070/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --add-host=host.docker.internal:host-gateway

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install

      - name: Build packages
        run: npm run build

      - name: Start Next.js service
        working-directory: templates/vercel
        run: |
          npm run build && npm start &
          echo $! > service.pid
          sleep 10

      - name: Register with Restate
        run: |
          curl -X POST http://localhost:9070/deployments \
            -H 'content-type: application/json' \
            -d '{"uri": "http://host.docker.internal:9080/restate", "use_http_11": true}'

      - name: Test Next.js template
        run: |
          echo "Testing Greeter service..."
          RESPONSE=$(curl -s localhost:8080/Greeter/greet --json '{"name": "Vercel"}')
          echo "Response: $RESPONSE"

          # Check if response contains expected message
          if echo "$RESPONSE" | grep -q "You said hi to Vercel!"; then
            echo "✅ Test passed!"
          else
            echo "❌ Test failed! Expected: { result: You said hi to Vercel! }"
            exit 1
          fi

      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== Restate logs ==="
          docker logs $(docker ps -q --filter ancestor=docker.restate.dev/restatedev/restate:latest)

          echo "=== Next.js logs ==="
          if [ -f templates/vercel/service.pid ]; then
            ps aux | grep next || true
          fi

      - name: Cleanup
        if: always()
        working-directory: templates/vercel
        run: |
          if [ -f service.pid ]; then
            kill $(cat service.pid) || true
          fi
